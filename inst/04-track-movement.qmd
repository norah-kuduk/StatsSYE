```{r}
library(f1dataR)
library(tidyverse)
library(dplyr)
library(gganimate)
library(gifski)
## setup_fastf1()
```

```{r}
## use_virtualenv("f1dataR_env")
```

```{r}
## change the cache to a directory in the r project
library(here)
# clear_cache()
```

Hamilton 2018 Singapore Grand Prix Qualifying 
```{r}
load_session_laps(season = 2018, round = 15)
```

```{r}
load_circuit_details(season = 2018, round = 15)
```

```{r}
ham_2018_singapore_quali <- load_driver_telemetry(season = 2018, round = 15, session = "Q", driver = "HAM", laps = "fastest")
```

```{r}
plot_fastest(season = 2018, round = 15, session = "Q", driver = "HAM", color = "gear")
```

```{r}
racename <- load_schedule(2018) |> 
  filter(round == 15)
```

```{r}
x <- ham_2018_singapore_quali$x
y <- ham_2018_singapore_quali$y
time <- ham_2018_singapore_quali$time

df <- tibble(x = x, y = y, time = time)


animation <- ggplot(df, aes(x = x, y = y)) + 
  geom_point() + 
  theme_minimal() + 
  transition_time(time) 

animate(animation, fps = 10,  renderer = gifski_renderer())
```

```{r}
## plot an empty track
circuit <- load_circuit_details(season = 2018, round = 15)
```

```{r}
## example of plotting a moving point on a static line
ggplot(data = tibble::tibble(x=1:10,y=1:10), aes(x=x,y=y)) +
  geom_point() +
  geom_line(data = tibble::tibble(x2 = 1:10, y = 1:10),
            aes(x = x2, y = y, group = 1)) +
  transition_time(x)
animate(last_plot(), nframes = 50)
```

```{r}
ggplot(ham_2018_singapore_quali, aes(x, y)) +
  geom_path(aes(x, y), linewidth = 4, lineend = "round")
```

```{r}
## animate a point over a static path
## remove gridlines and add title

anim <- ggplot(ham_2018_singapore_quali, aes(x, y, group = NA)) +
  geom_path(data = tibble::tibble(x = x, y = y), aes(x, y, group = 1), linewidth = 4, lineend = "round", colour = "grey") + 
  geom_point(aes(x, y), colour = "darkorange") + 
  theme_minimal() + 
  transition_time(time)

animate(anim)

```

```{r}
## animate a point to change color by gear at the time
anim <- ggplot(ham_2018_singapore_quali |> mutate(n_gear = as_factor(n_gear)), aes(x, y, group = NA, color = n_gear)) +
  geom_point(aes(x, y), size = 5) + 
  theme_minimal() + 
  transition_time(time)

animate(anim)
```

```{r}
anim <- ggplot(ham_2018_singapore_quali, aes(x, y, group = NA, color = speed)) +
  geom_point(aes(x, y), size = 5) + 
  theme_minimal() + 
  transition_time(time)

animate(anim)
```

## Example Code for Reference

from <https://hansenjohnson.org/post/animate-movement-in-r/>

this code would run and i dint feel like debugging it but i used it for reference

## Attempt for Track
```{r}
## get data to draw a track
singapore_2018_track <- load_circuit_details(season = 2018, round = 15)
singapore_2018_track <- singapore_2018_track$corners

singapore_2018_track2 <- ham_2018_singapore_quali |> select(-time)
```

```{r}
## works but the track is choppy
p = ggplot() +
  geom_path(data = singapore_2018_track, aes(x=x,y=y,group=1), linewidth=6, color = "grey") +
  geom_point(data = ham_2018_singapore_quali, aes(x=x,y=y),
             alpha = 0.7, color = "black")+
  labs(x=NULL, y=NULL)+
  theme_minimal()+
  theme(panel.grid = element_blank(), axis.text = element_blank(), axis.title = element_blank())
p
```

```{r}
## smooth track but reveals with point
singapore_2018_track2 <- ham_2018_singapore_quali |> select(-time)
singapore_2018_track2 <- singapore_2018_track2 |> mutate(x2 = singapore_2018_track2$x, 
                                                         y2 = singapore_2018_track2$y) |>
  select(-x, -y) |> select(x2,y2)

## add the first row again as the last row
singapore_2018_track2 <- bind_rows(singapore_2018_track2, singapore_2018_track2 |> slice(1))
``` 

```{r}

p2 = ggplot() +
  geom_path(data = singapore_2018_track2, aes(x=x2, y=y2, group=1), linewidth=6, color = "grey") +
  geom_point(data = ham_2018_singapore_quali, aes(x=x, y=y, group = NA),
             alpha = 0.7, color = "black")+
  labs(x=NULL, y=NULL)+
  theme_minimal()+
  theme(panel.grid = element_blank(), axis.text = element_blank(), axis.title = element_blank())
p2
```

```{r}
# animate
# transition_time does not draw path, but had movement of point
anim = p2 + 
  transition_time(time = time)+
  ease_aes('linear')+
  ggtitle("Time: {frame_time}")

animate(anim, fps = 10)
```

```{r}
# animate
# transition reveal reveals patha along with point by time
anim = p2 + 
  transition_reveal(along = time)+
  ease_aes('linear')+
  ggtitle("Time: {frame_along}")

animate(anim, fps = 10)
```

```{r}
# get mercedes color
merc_color <- constructor_color("mercedes")
ham_color <- driver_color("HAM")
```

```{r}
p2 = ggplot() +
  geom_path(data = singapore_2018_track2, aes(x=x2, y=y2, group=1), linewidth=8, color = "white") +
  geom_point(data = ham_2018_singapore_quali, aes(x=x, y=y, group = NA),
             alpha = 0.7, color = ham_color, size=3)+
  labs(x=NULL, y=NULL) +
  theme_track() +
  labs(title = "Hamilton Qualifying Lap", 
  subtitle = "Monaco Grand Prix 2018")
p2
```

```{r}
anim = p2 + 
  transition_reveal(along = time)+
  ease_aes('linear') +
  labs(caption = "Time: {sprintf('%.3f',frame_along)}")

animate(anim, width = 512, height = 512, fps = 10)
```

