---
title: "Interactive Analysis of Formula 1 Qualifying Data"
format: gfm
---

```{r}
#| output: false
#| echo: false
#| warning: false
#| message: false

library(tidyverse)
library(knitr)
library(kableExtra)
library(ggrepel)
## install f1dataR
## install.packages("f1dataR")
library(f1dataR)
## install custom package
## devtools::install_github("https://github.com/norah-kuduk/StatsSYE”)
library(f1animateR)

fetch_quali_data <- function(season, round) {
  tryCatch(
    {
      results <- load_session_laps(season, round, "Q")
      if (is.null(results) || nrow(results) == 0) return(NULL)
      results
    },
    error = function(e) NULL
  )
}

fetch_quali_data_seasons <- function(season_a, season_b, round) {
  tryCatch(
    {
      results_a <- load_session_laps(season_a, round, "Q") |> mutate(season = season_a)
      results_b <- load_session_laps(season_b, round, "Q") |> mutate(season = season_b)
      if (is.null(results_a) || is.null(results_b) || nrow(results_a) == 0 || nrow(results_b) == 0) {
        return(NULL)
      } else {
        results <- bind_rows(results_a, results_b)
        return(results)
      }
      
    },
    error = function(e) NULL
  )
}
```

## Visualizing Formula 1 Qualifying Laps 

In this project, we focus on analyzing motorsport telemetry data, using data from the 2018 to 2024 Formula 1 (F1) seasons. Formula 1 has a vast amount of data used widely in the sport, making it perfect for visualization and analysis. This project centers on the analysis of F1 qualifying sessions, highlighting comparisons between two drivers in the same race or the same driver across different seasons. We built a Shiny application to allow users to interactively explore qualifying data and create custom visualizations by selecting drivers, seasons, and circuits. As case studies, we look at different qualifying sessions across years with the same driver and across drivers during the same race.

For more information, please view either the [paper](https://github.com/norah-kuduk/StatsSYE/blob/master/SYE_WriteUp.pdf) or the [poster](https://github.com/norah-kuduk/StatsSYE/blob/master/SYE_Poster.pdf) associated. 

The Shiny app built leverages Formula 1 telemetry data to create the plots for exploring and animating qualifying laps. The full app can be found at [https://stlawu.shinyapps.io/f1-qualifying-app/](https://stlawu.shinyapps.io/f1-qualifying-app/). The app has three tabs: an outline/instruction page, an exploration page, and an animation page. 

### f1dataR and Shiny

This project uses the `f1dataR` package to develop a Shiny web application used to visualize and compare qualifying laps. The `f1dataR` package is an R interface to access Formula 1 data, developed to make use of statistical tools in R with detailed motorsport telemetry and timing information. `f1dataR` leverages both the Jolpica API (formerly known as Ergast) for historical and session metadata, and a wrapper around the FastF1 Python library to extract rich telemetry data directly from F1's live timing systems. 

### São Paulo Grand Prix

We look at a case study to observe some of the different plots and outputs that users will see when using the app. This case study will compare laps from the 2023 and 2024 São Paulo Grand Prix. These two qualifying sessions highlight the difference between wet and dry weather driving conditions, which might create the most significant differential in lap times. This season comparison highlights how wet weather conditions in 2023 led to significantly slower lap times compared to the dry conditions in 2024, as the on-track positions for Lando Norris between the two seasons are drastically far from each other. 

It is important to note that there is some variance in lap times from year to year due to car and driver development, but keeping the driver (and constructor) the same seeks to mitigate some of the variance. We will see more examples later in this section about how qualifying lap times vary between teammates and constructors. 

```{r compbrazil, out.width='100%'}
#| echo: false
#| warning: false
#| message: false

full_results_a <- load_results(2024, 21) |> mutate(season = 2024)
full_results_b <- load_results(2023, 20) |> mutate(season = 2023)

full_results <- bind_rows(full_results_a, full_results_b)

driver_data <- load_drivers(2024)

driver <- inner_join(full_results, driver_data, by = "driver_id")

data <- driver |> filter(code == "NOR") |>
    unite("driver_name", c(given_name, family_name), sep = " ") |>
    rename("driver_code" = code) |> 
    unique()
 
quali_laps_a <- fetch_quali_data(2024, "São Paulo Grand Prix") |>
  filter(driver == "NOR") |>
  filter(lap_time > 0) |>
  mutate(season = 2024)

quali_laps_b <- fetch_quali_data(2023, "São Paulo Grand Prix") |>
  filter(driver == "NOR") |>
  filter(lap_time > 0) |>
  select(driver, lap_time, lap_number, compound) |>
  mutate(season = 2023)

test <- bind_rows(quali_laps_a, quali_laps_b) |> rename("driver_code" = driver)

  
final <- inner_join(test, data, by = "season") |> 
  rename("driver_code" = driver_code.x) |>
  select(driver_code, season, constructor_id, lap_time, lap_number, compound, grid) |>
  group_by(season) |>
  filter(lap_time == min(lap_time)) 

  
kable(final,caption = 'Qualifying results for Lando Norris.', align = 'c')
```

```{r brazil, out.width='100%', echo=FALSE, warnings=FALSE, fig.cap='Snapshot of a late point in the lap where cars are very far apart (about 69 seconds in).', fig.height=5}
brazil24 <- get_quali_telemetry(laps = "fastest", season = 2024, round = 21, driver = "NOR", verbose = FALSE)
brazil23 <- get_quali_telemetry(laps = "fastest", season = 2023, round = 20, driver = "NOR", verbose = FALSE)

# smooth Abu Dhabi track data
brazil_track <- smooth_track(brazil24)
start_coord <- brazil_track |> slice(1)

# get team and driver colors
color_24 <- driver_color("NOR")
color_23 <- "darkorange4"

# Add driver labels and combine data
brazil24 <- brazil24 |> mutate(season = 2024)
brazil23 <- brazil23 |> mutate(season = 2023)

plot_data <- bind_rows(brazil24, brazil23) |> mutate(season = as.factor(season)) 

time_data <- plot_data |> group_by(season) |> filter(time > 68.9) |> filter(time < 68.98)

# Pick two consecutive points near the start of the track to show direction
arrow_start <- brazil24 |> slice(3)
arrow_end <- brazil24 |> slice(10)

 # Static plot
static_plot <- ggplot() +
  geom_path(data = brazil_track, aes(x = x2, y = y2, group = 1),
            linewidth = 4, color = "white", lineend = "round") +
  geom_point(data = start_coord, aes(x = x2, y = y2),
             color = "black", shape = 18, size = 3) +
  geom_point(data = time_data, aes(x = x, y = y, group = season, color = season),
             size = 2) +
  geom_segment(
    data = NULL,
    aes(x = arrow_start$x, y = arrow_start$y,
        xend = arrow_end$x, yend = arrow_end$y),
    arrow = arrow(length = unit(0.1, "cm"), type = "closed"),
    color = "gray40",
    linewidth = 0.7
  ) +
  scale_color_manual(values = c("2024" = color_24, "2023" = color_23)) +
  theme_track() +
  labs(title = "2024 vs. 2023 Norris Qualifying Lap",
     subtitle = "São Paulo Grand Prix",
     caption = "Time: 68.9s",
     x = NULL, y = NULL)

# Correct the track alignment
corrected_plot <- corrected_track(static_plot, brazil24) + geom_segment(
    data = NULL,
    aes(x = arrow_start$x, y = arrow_start$y,
        xend = arrow_end$x, yend = arrow_end$y),
    arrow = arrow(length = unit(0.1, "cm"), type = "closed"),
    color = "gray40",
    linewidth = 0.7
  ) 

corrected_plot
```

In this plot, we see that the positioning of Norris between the two seasons is vastly different. In the dry conditions of 2023, Norris is almost completed with his lap, while in 2024 he still has three turns to go. Wet versus dry conditions typically cause the largest gaps in qualifying due to how difficult wet conditions are to drive in. 

```{r degbrazil, out.width='100%', fig.align='center', fig.cap='Plot of the ten fastest lap times and tire degredation across the two seasons.', fig.height=4}
#| echo: false
#| warning: false
#| message: false

quali_laps <- fetch_quali_data_seasons(2024, 2023, "São Paulo Grand Prix") |>
  filter(driver == "NOR") |>
  filter(lap_time > 0) |>
  select(driver, season, lap_time, lap_number, compound) |>
  arrange(lap_time) |>
  group_by(season) |>
  slice(1:7) |>
  ungroup() |>
  arrange(desc(lap_time)) |>
  mutate(index = row_number()) |> 
  mutate(season = as.factor(season))

ggplot(quali_laps, aes(x = index, y = lap_time)) +
  geom_segment(aes(x = index, xend = index, y = 0, yend = lap_time, color = compound, linetype = season)) +
  geom_point(size = 1.5, aes(color = compound), alpha = 0.7) +
  scale_color_manual(values = c("SOFT" = "red", "MEDIUM" = "gold", "HARD" = "white", "WET" = "blue", "INTERMEDIATE" = "#29AF7FFF",
                                "HYPERSOFT" = "lightpink", "ULTRASOFT" = "purple", "SUPERSOFT" = "tomato", "SUPERHARD" = "orange")) +
  geom_label(aes(label = lap_number), nudge_x = 0.2) +
  coord_flip() +
  labs(
    title = "Tire Performance Degradation for Lando Norris",
    y = "Lap Time (seconds)",
    color = "Tire Compound",
    linetype = "Season"
  ) +
  theme_minimal() +
  theme(legend.position = "top", legend.text = element_text(color = "#1C1C1C"),
        legend.title = element_text(color = "#1C1C1C", face = "bold"),
        legend.box.background = element_rect(color="white"),
        axis.title.y = element_blank(), axis.text.y = element_blank(),
        axis.ticks.y = element_blank())
```

The plot above shows the seven fastest times from Lando Norris during the 2023 and 2024 qualifying sessions. We can see that the laps from 2024 were driven on intermediate tires, which are one of the two types of tires used in wet conditions. Unlike the soft, medium, or hard tires, intermediates and wet tires have additional tread on them to help displace water that sits on the track. While this makes the cars safer to drive in wet conditions, it makes them considerably slower. 

### Formula 1 and Qualifying 

Formula 1 (F1) is a global motorsport series featuring 20 drivers from 10 teams ("constructors") competing across a season of 18–24 races. Each race weekend includes practice, qualifying, and the main race, with qualifying determining the starting order through a three-stage knockout format. Points are awarded based on race results, contributing to both the World Drivers’ and Constructors’ Championships. Tire strategy also plays a key role, with teams using various compounds provided by Pirelli to balance grip and durability.

In this project, we look specifically at qualifying laps, because a driver’s fastest lap from a qualifying session highlights driver skill, car setup eﬀiciency, and team strategy under peak performance conditions. This provdies a baseline to compare with. Unlike race laps, which are influenced by tire wear, fuel load, traﬀic, and strategy, qualifying107laps are run under optimal conditions every time because every thousandth of a second counts towards a better grid spot. 
